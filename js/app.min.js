"use strict";(()=>{const e=document.querySelector("#placement__img-map-wrapper-js"),t=()=>{const e=new google.maps.Map(document.getElementById("map"),{zoom:17,center:{lat:59.93899,lng:30.32145}});new google.maps.Marker({position:{lat:59.938628,lng:30.3238},map:e,icon:"img/map-marker.png"})};if(e){const n=document.createElement("div");n.setAttribute("id","map"),n.setAttribute("class","placement__map"),e.parentElement.replaceChild(n,e);const i=document.createElement("script");i.src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDdxiZ8JD-Awc3VOchAbkcA54-XHZJYkGY&callback=initMap",i.defer=!0,window.initMap=t,document.head.appendChild(i)}})(),(()=>{const e="ArrowLeft",t="ArrowRight",n=document.querySelector("#filter-panel__cost-title-js"),i=document.querySelector("#cost-min-js"),r=document.querySelector("#cost-max-js");if(n&&i&&r){const o=(e=>{const t=document.createElement("div");return t.innerHTML=e,t.firstElementChild})('\n      <div class="filter-panel__cost-range">\n        <div class="filter-panel__cost-range-line">\n          <div\n            class="filter-panel__cost-point filter-panel__cost-point--min"\n            tabindex="0"\n            id="filter-panel__cost-point-min-js"\n            aria-label="Изменить минимальную стоимость"\n          ></div>\n          <div\n            class="filter-panel__cost-point filter-panel__cost-point--max"\n            tabindex="0"\n            id="filter-panel__cost-point-max-js"\n            aria-label="Изменить максимальную стоимость"\n          ></div>\n        </div>\n      </div>\n    '),s=o.querySelector(".filter-panel__cost-range-line"),l=o.querySelector("#filter-panel__cost-point-min-js"),a=o.querySelector("#filter-panel__cost-point-max-js"),c={MIN:{propName:"--min-percent",limitCostValue:0,limitPropValue:0,initPropValue:0,input:i,point:l},MAX:{propName:"--max-percent",limitCostValue:22059,limitPropValue:100,initPropValue:68,input:r,point:a}},p=e=>parseFloat(o.style.getPropertyValue(e.propName).split("%")[0]),u=e=>{const t=parseInt(e.input.value,10);return Number.isNaN(t)?e.limitPropValue:t/c.MAX.limitCostValue*c.MAX.limitPropValue},d=e=>{const t=p(e);return Math.round(c.MAX.limitCostValue*t/c.MAX.limitPropValue)},m=e=>{const t=d(e);parseFloat(e.input.value)!==t&&(e.input.value=t)},v=(e,t)=>{o.style.setProperty(e.propName,t+"%"),m(e)},_=(e,t)=>{(t=t||u(e))<c.MIN.limitPropValue?t=c.MIN.limitPropValue:t>c.MAX.limitPropValue&&(t=c.MAX.limitPropValue),e===c.MIN&&t>p(c.MAX)?v(c.MAX,t):e===c.MAX&&t<p(c.MIN)&&v(c.MIN,t),v(e,t)},L=e=>{e.target===c.MIN.input?_(c.MIN):_(c.MAX)},E=e=>{const t=e.target===c.MIN.point?c.MIN:c.MAX,n=s.clientWidth,i=s.getBoundingClientRect().left,r=e=>{const r=Math.round((e.x-i)/n*100);_(t,r)},o=()=>{document.removeEventListener("mousemove",r),document.removeEventListener("mouseup",o)};document.addEventListener("mousemove",r),document.addEventListener("mouseup",o)},y=n=>{const i=n.target===c.MIN.point?c.MIN:c.MAX;n.code===e?_(i,p(i)-1):n.code===t&&_(i,p(i)+1)};v(c.MIN,c.MIN.initPropValue),v(c.MAX,c.MAX.initPropValue),i.addEventListener("input",L),r.addEventListener("input",L),l.addEventListener("mousedown",E),a.addEventListener("mousedown",E),l.addEventListener("keydown",y),a.addEventListener("keydown",y),n.after(o)}})(),(()=>{const e="popup--opened",t="popup--error",n=document.querySelector("#placement__description-button-js"),i=document.querySelector("#popup-js"),r=i.querySelector("#popup__form-js"),o=i.querySelector("#popup__close-button-js"),s=i.querySelector("#popup__submit-js"),l=i.querySelector("#popup-field-name-js"),a=i.querySelector("#popup-field-email-js"),c=i.querySelector("#popup-field-letter-js"),p={NAME:"userName",EMAIL:"userEmail"},u=e=>{"Escape"===e.code&&m()},d=t=>{t.preventDefault(),i.classList.add(e),l.value=localStorage.getItem(p.NAME),a.value=localStorage.getItem(p.EMAIL),o.addEventListener("click",m),s.addEventListener("click",v),l.addEventListener("input",E),a.addEventListener("input",E),c.addEventListener("input",E),document.addEventListener("keydown",u),l.focus()},m=r=>{r&&r.preventDefault(),i.classList.remove(e),i.classList.remove(t),o.removeEventListener("click",m),s.removeEventListener("click",v),l.removeEventListener("input",E),a.removeEventListener("input",E),c.removeEventListener("input",E),document.removeEventListener("keydown",u),n.focus()},v=e=>{e.preventDefault(),i.classList.remove(t),L()&&fetch("https://echo.htmlacademy.ru/",{method:"POST",body:new FormData(r)}).then((e=>{if(!e.ok)throw i.classList.add(t),new Error(`_${e.status}: ${e.statusText}`);return localStorage.setItem(p.NAME,l.value),localStorage.setItem(p.EMAIL,a.value),l.value="",a.value="",c.value="",m(),e})).catch((e=>{throw i.classList.add(t),e}))},_=e=>e.value.length>0?(e.setCustomValidity(""),!0):(e.setCustomValidity("Обязательное поле для заполнения"),!1),L=()=>_(l)&&_(a)&&_(c),E=e=>{_(e.target)};i&&n&&o&&s&&(i.classList.remove("popup--no-js"),n.addEventListener("click",d))})(),(()=>{const e=document.querySelector(".principles");if(e){const t="principles__slide--active",n="principles__control-button--active",i=e=>{const t=document.createElement("div");return t.innerHTML=e,t.firstChild},r=(r,o)=>{const s=i(`<li>\n          <button class="principles__control-button  ${o?"":n}" type="button">\n            <span class="visually-hidden">Принцип ${o+1}</span>\n          </button>\n        </li>`);return s.firstElementChild.addEventListener("click",(i=>{const o=e.querySelector("."+t);o!==r&&(e.querySelector("."+n).classList.remove(n),o.classList.remove(t),r.classList.add(t),i.target.classList.add(n))})),o||r.classList.add(t),s},o=e.querySelector("#principles__slider-js"),s=e.querySelectorAll(".principles__slide"),l=i('<ul class="principles__control list-reset"></ul>');s.forEach(((e,t)=>{e.classList.remove("principles__slide--no-js"),l.append(r(e,t))})),o.after(l)}})(),(()=>{const e=Array.from(document.querySelectorAll(".sort-panel__type")),t=Array.from(document.querySelectorAll(".sort-panel__direction")),n=n=>{const i=n.target;let r="",o=[];e.includes(i)?(r="sort-panel__type--active",o=e):(r="sort-panel__direction--active",o=t),o.filter((e=>e.classList.contains(r))).forEach((e=>e.classList.remove(r))),i.classList.add(r)};e.forEach((e=>e.addEventListener("click",n))),t.forEach((e=>e.addEventListener("click",n)))})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
