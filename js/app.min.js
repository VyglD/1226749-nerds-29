"use strict";const Point={MIN:{propName:"--min-percent",costLimit:0,currentPercent:0},MAX:{propName:"--max-percent",costLimit:22059,currentPercent:68}},prevElement=document.querySelector("#filter-panel__cost-title-js"),minCost=document.querySelector("#cost-min-js"),maxCost=document.querySelector("#cost-max-js"),createElement=e=>{const t=document.createElement("div");return t.innerHTML=e,t.firstElementChild},calculateCostValue=e=>Math.round(Point.MAX.costLimit*e.currentPercent/100),changeCostValue=(e,t)=>{e===Point.MIN?minCost.value=t:maxCost.value=t};if(prevElement&&minCost&&maxCost){let e=calculateCostValue(Point.MIN),t=calculateCostValue(Point.MAX);const n=createElement('\n    <div class="filter-panel__cost-range">\n      <div class="filter-panel__cost-range-line">\n        <div\n          class="filter-panel__cost-point filter-panel__cost-point--min"\n          tabindex="0"\n          id="filter-panel__cost-point-min-js"\n        ></div>\n        <div\n          class="filter-panel__cost-point filter-panel__cost-point--max"\n          tabindex="0"\n          id="filter-panel__cost-point-max-js"\n        ></div>\n      </div>\n    </div>\n  '),o=n.querySelector(".filter-panel__cost-range-line"),i=n.querySelector("#filter-panel__cost-point-min-js"),s=n.querySelector("#filter-panel__cost-point-max-js"),r=e=>{n.style.setProperty(e.propName,e.currentPercent+"%")},l=(e,t)=>{e.currentPercent=t,e===Point.MIN&&t>Point.MAX.currentPercent?(Point.MAX.currentPercent=t,r(Point.MAX),changeCostValue(Point.MAX,calculateCostValue(Point.MAX))):e===Point.MAX&&t<Point.MIN.currentPercent&&(Point.MIN.currentPercent=t,r(Point.MIN),changeCostValue(Point.MIN,calculateCostValue(Point.MIN)))},a=e=>{const t=e.target===minCost?Point.MIN:Point.MAX,n=Math.round(parseInt(e.target.value,10)/Point.MAX.costLimit*100);l(t,n),r(t)},c=e=>{const t=e.target===i?Point.MIN:Point.MAX,n=o.clientWidth,s=o.getBoundingClientRect().left,a=e=>{const o=Math.round((e.x-s)/n*100);o>=0&&o<=100&&(r(t),l(t,o),changeCostValue(t,calculateCostValue(t)))},c=()=>{document.removeEventListener("mousemove",a),document.removeEventListener("mouseup",c)};document.addEventListener("mousemove",a),document.addEventListener("mouseup",c)};r(Point.MIN),r(Point.MAX),i.addEventListener("mousedown",c),s.addEventListener("mousedown",c),changeCostValue(Point.MIN,e),changeCostValue(Point.MAX,t),minCost.addEventListener("input",a),maxCost.addEventListener("input",a),prevElement.after(n)}const OPENED_CLASS="popup--opened",NO_JS_CLASS="popup--no-js",ERROR_CLASS="popup--error",ERROR_MESSAGE="Обязательное поле для заполнения",URL="https://echo.htmlacademy.ru/",popup=document.querySelector("#popup-js"),openPopupBtn=document.querySelector("#placement__description-button-js"),closePopupBtn=document.querySelector("#popup__close-button-js"),submitPopupFormBtn=document.querySelector("#popup__submit-js"),nameInput=document.querySelector("#popup-field-name-js"),emailInput=document.querySelector("#popup-field-email-js"),letterTextarea=document.querySelector("#popup-field-letter-js"),openPopup=e=>{e.preventDefault(),popup.classList.add(OPENED_CLASS),closePopupBtn.addEventListener("click",closePopup),submitPopupFormBtn.addEventListener("click",submitForm),nameInput.addEventListener("input",onFieldDataChanged),emailInput.addEventListener("input",onFieldDataChanged),letterTextarea.addEventListener("input",onFieldDataChanged)},closePopup=e=>{e&&e.preventDefault(),popup.classList.remove(OPENED_CLASS),popup.classList.remove(ERROR_CLASS),closePopupBtn.removeEventListener("click",closePopup),submitPopupFormBtn.removeEventListener("click",submitForm),nameInput.removeEventListener("input",onFieldDataChanged),emailInput.removeEventListener("input",onFieldDataChanged),letterTextarea.removeEventListener("input",onFieldDataChanged)},submitForm=e=>{e.preventDefault(),popup.classList.remove(ERROR_CLASS),isValidFormData()&&fetch(URL).then(e=>{if(!e.ok)throw popup.classList.add(ERROR_CLASS),new Error(`_${e.status}: ${e.statusText}`);return closePopup(),e}).catch(e=>{throw popup.classList.add(ERROR_CLASS),e})},isValidField=e=>e.value.length>0?(e.setCustomValidity(""),!0):(e.setCustomValidity(ERROR_MESSAGE),!1),isValidFormData=()=>isValidField(nameInput)&&isValidField(emailInput)&&isValidField(letterTextarea),onFieldDataChanged=e=>{isValidField(e.target)};popup&&openPopupBtn&&closePopupBtn&&submitPopupFormBtn&&(popup.classList.remove(NO_JS_CLASS),openPopupBtn.addEventListener("click",openPopup));const sliderContainer=document.querySelector(".principles");if(sliderContainer){const e="principles__slide--active",t="principles__control-button--active",n=e=>{const t=document.createElement("div");return t.innerHTML=e,t.firstChild},o=(o,i)=>{const s=n(`<li>\n        <button class="principles__control-button  ${i?"":t}" type="button">\n          <span class="visually-hidden">Принцип ${i+1}</span>\n        </button>\n      </li>`);return s.firstElementChild.addEventListener("click",n=>{const i=sliderContainer.querySelector("."+e);i!==o&&(sliderContainer.querySelector("."+t).classList.remove(t),i.classList.remove(e),o.classList.add(e),n.target.classList.add(t))}),i||o.classList.add(e),s},i=sliderContainer.querySelector("#principles__slider-js"),s=sliderContainer.querySelectorAll(".principles__slide"),r=n('<ul class="principles__control list-reset"></ul>');s.forEach((e,t)=>{e.classList.remove("principles__slide--no-js"),r.append(o(e,t))}),i.after(r)}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
